name: Stable
on: [push, pull_request]
permissions:
  contents: write
jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # version: [9.11.0, 9.12.0]
        version: [9.12.0]
        abi: [cp38, cp39, cp310, cp311]
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: |
          docker build docker/manylinux -t medcoupling/manylinux
          docker run --rm -e MAKEFLAGS='-j2' -v `pwd`:/io medcoupling/manylinux /io/build-wheels-linux.sh ${{ matrix.version }} ${{ matrix.abi }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: true
          activate-environment: ""
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: wheelhouse/medcoupling-${{ matrix.version }}-${{ matrix.abi }}-${{ matrix.abi }}-manylinux2014_x86_64.manylinux_2_17_x86_64.whl
      - name: Upload
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash -l {0}
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: |
          conda install -y twine
          twine upload --non-interactive wheelhouse/*.whl

  windows:
    runs-on: windows-latest
    permissions:
      contents: write
    strategy:
      matrix:
        version: [9.12.0]
        include:
          - abi: cp38
            python-version: '3.8'
          - abi: cp39
            python-version: '3.9'
          - abi: cp310
            python-version: '3.10'
          - abi: cp311
            python-version: '3.11'

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          update-environment: true
      - name: Build
        shell: cmd
        run: call .\build-wheels-windows.bat ${{ matrix.version }} ${{ matrix.abi }}
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: compilation_output
          path: |
            build_dir/dependencies
            dist
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-version: latest
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/*.whl
      - name: Upload
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash -l {0}
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: |
          conda install -y twine
          twine upload --non-interactive dist/*.whl

